{
	"info": {
		"_postman_id": "7f21cc19-4e80-451c-bcca-94e7a520920b",
		"name": "Album-Performer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19767625"
	},
	"item": [
		{
			"name": "Crear primer performer valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"performerId\", jsonData.id); // Guarda el ID en una variable global",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Nombre del Performer\",\n    \"descripcion\": \"Breve descripción del performer\",\n    \"imagen\": \"URL de la imagen del performer\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/performers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"performers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear segundo performer valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"segundoPerformerId\", jsonData.id); // Guarda el ID en una variable global",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Otro nombre del Performer\",\n    \"descripcion\": \"Otra breve descripción del performer\",\n    \"imagen\": \"Otra URL de la imagen del performer\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/performers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"performers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear tercer performer valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"tercerPerformerId\", jsonData.id); // Guarda el ID en una variable global",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Otro nombre del Performer\",\n    \"descripcion\": \"Otra breve descripción del performer\",\n    \"imagen\": \"Otra URL de la imagen del performer\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/performers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"performers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear cuarto performer valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"cuartoPerformerId\", jsonData.id); // Guarda el ID en una variable global",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Otro nombre del Performer\",\n    \"descripcion\": \"Otra breve descripción del performer\",\n    \"imagen\": \"Otra URL de la imagen del performer\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/performers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"performers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una album valida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"albumId\", jsonData.id); // Guarda el ID en una variable global",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Nombre del Álbum\",\n    \"caratula\": \"https://example.com/caratula.jpg\",\n    \"fechaLanzamiento\": \"2023-01-01\",\n    \"descripcion\": \"Descripción del álbum\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/albumes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un performer a una album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{albumId}}/performers/{{performerId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{albumId}}",
						"performers",
						"{{performerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un performer que no existe a una album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{albumId}}/performers/{{invalidId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{albumId}}",
						"performers",
						"{{invalidId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un performer a un album que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{invalidId}}/performers/{{performerId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{invalidId}}",
						"performers",
						"{{performerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener Todos los performers que Cubre una album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{albumId}}/performers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{albumId}}",
						"performers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un performer asociado a una album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{albumId}}/performers/{{performerId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{albumId}}",
						"performers",
						"{{performerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un performer que No Esté Asociado a una album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{albumId}}/performers/{{otroPerformerId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{albumId}}",
						"performers",
						"{{otroPerformerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar segundo performer a una album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{albumId}}/performers/{{segundoPerformerId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{albumId}}",
						"performers",
						"{{segundoPerformerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar tercer performer a una album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{albumId}}/performers/{{tercerPerformerId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{albumId}}",
						"performers",
						"{{tercerPerformerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar cuarto performer a una album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/albumes/{{albumId}}/performers/{{cuartoPerformerId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"albumes",
						"{{albumId}}",
						"performers",
						"{{cuartoPerformerId}}"
					]
				}
			},
			"response": []
		}
	]
}